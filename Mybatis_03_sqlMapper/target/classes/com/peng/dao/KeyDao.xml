<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peng.dao.KeyDao">

    <!--public Key getKeyById(Integer id);-->
    <select id="getKeyById" resultMap="myKey2">
        SELECT k.`id` kid,k.`keyname`,k.`lockid`,
            l.`id` lid,l.`lockName`
            FROM t_key  k
            LEFT JOIN
            t_lock l
            ON  k.`lockid`=l.`id`
            WHERE k.`id`=#{id}
    </select>
    <resultMap id="myKey" type="com.peng.bean.Key">
        <id property="id" column="kid"/>
        <result property="keyName" column="keyname"/>
        <result property="lock.id" column="lid"/>
        <result property="lock.lockName" column="lockname"/>
    </resultMap>

    <resultMap id="myKey2" type="com.peng.bean.Key">
        <id property="id" column="kid"/>
        <result property="keyName" column="keyname"/>
        <!--接下来的属性是一个对象，自定义这个对象的封装规则-->
        <!--javaType=""指定这个属性的类型-->
        <association property="lock" javaType="com.peng.bean.Lock">
            <id property="id" column="lid"/>
            <result property="lockName" column="lockName"/>
        </association>
    </resultMap>

    <!--public Key getKeyByIdSimple(Integer id);
        查询key的时候也可以带上锁子信息
    -->
    <select id="getKeyByIdSimple" resultMap="simpleMyKey">
        select * from t_key
        where id=#{id}
    </select>

    <resultMap id="simpleMyKey" type="com.peng.bean.Key">
        <id property="id" column="id"/>
        <result property="keyName" column="keyname"/>
        <!--告诉mybatis自己去调用一个查询查锁子
        select=""指定一个查询sql的唯一标识
        mybatis自动调用指定的sql将查出的lock封装进来
        public Lock getLockByIdSimple(Integer id);
        需要传入锁子id
        告诉mybatis把哪一列的值传递过去
        -->
        <association property="lock"
        select="com.peng.dao.LockDao.getLockByIdSimple"
         column="id" fetchType="lazy">
        </association>
    </resultMap>

</mapper>